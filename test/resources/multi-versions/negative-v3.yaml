openapi: 3.0.3
info:
  title: Sample API
  description: This is a sample API.
  version: '1.0.0'
  contact:
    name: Dan Hayduk
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
servers:
  - url: http://api.example.com/v1
  - url: http://api.example3.com/v1
  - url: http://api.example2.com
tags:
  - name: Sample
paths:
  /v2/test1:
    get:
      description: Get some test data1.
      operationId: getTestData1
      tags:
        - Sample
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
            example: 1
      responses:
        '200':
          description: OK
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
                example: 1
          content:
            application/json:
              schema:
                required:
                  - id
                  - name
                properties:
                  id:
                    type: integer
                    format: int64
                  name:
                    type: string
                  tag:
                    type: string
                example:
                  id: 1
                  name: tom
                  tag: man
        '500':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Modify some test data.
      operationId: patchTestData
      tags:
        - Sample
      requestBody:
        description: descllla
        content:
          application/merge-patch+json:
            schema:
              type: string
              example: s
          application/json:
            schema:
              type: string
              example: s
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: s
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v3/test:
    get:
      description: Get some test data.
      operationId: getTestData
      tags:
        - Sample
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
            example: 1
      responses:
        '200':
          description: OK
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
                example: 1
          content:
            application/json:
              schema:
                required:
                  - id
                  - name
                properties:
                  id:
                    type: integer
                    format: int64
                  name:
                    type: string
                  tag:
                    type: string
                example:
                  id: 1
                  name: tom
                  tag: man
        '500':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Modify some test data.
      operationId: patchTestData2
      tags:
        - Sample
      requestBody:
        description: descllla
        content:
          application/merge-patch+json:
            schema:
              type: string
              example: s
          application/json:
            schema:
              type: string
              example: s
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: s
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Pet:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: '#/components/schemas/Pet'
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
      example:
        code: 2
        message: m
  securitySchemes:
    api_key:
      description: desc
      in: header
      name: api_key
      type: apiKey
